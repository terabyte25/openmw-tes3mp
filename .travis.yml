os:
 - linux
# - osx
osx_image: xcode9.4
language: cpp
sudo: required
dist: xenial
branches:
  only:
    - master
    - coverity_scan
    - /openmw-.*$/
    - /^[0-9]+\.[0-9]+\.[0-9]+.*$/
env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
  - secure: 1QK0yVyoOB+gf2I7XzvhXu9w/5lq4stBXIwJbVCTjz4Q4XVHCosURaW1MAgKzMrPnbFEwjyn5uQ8BwsvvfkuN1AZD0YXITgc7gyI+J1wQ/p/ljxRxglakU6WEgsTs2J5z9UmGac4YTXg+quK7YP3rv+zuGim2I2rhzImejyzp0Ym3kRCnNcy+SGBsiRaevRJMe00Ch8zGAbEhduQGeSoS6W0rcu02DNlQKiq5NktWsXR+TWWWVfIeIlQR/lbPsCd0pdxMaMv2QCY0rVbwrYxWJwr/Qe45dAdWp+8/C3PbXpeMSGxlLa33nJNX4Lf/djxbjm8KWk6edaXPajrjR/0iwcpwq0jg2Jt6XfEdnJt35F1gpXlc04sxStjG45uloOKCFYT0wdhIO1Lq+hDP54wypQl+JInd5qC001O7pwhVxO36EgKWqo8HD+BqGDBwsNj2engy9Qcp3wO6G0rLBPB3CrZsk9wrHVv5cSiQSLMhId3Xviu3ZI2qEDA+kgTvxrKrsnMj4bILVCyG5Ka2Mj22wIDW9e8oIab9oTdujax3DTN1GkD6QuOAGzwDsNwGASsgfoeZ+FUhgM75RlBWGMilgkmnF7EJ0oAXLEpjtABnEr2d4qHv+y08kOuTDBLB9ExzCIj024dYYYNLZrqPKx0ncHuCMG2QNj2aJAJEZtj1rQ=

addons:
  apt:
    sources:
      - sourceline: 'ppa:openmw/openmw'
      - sourceline: 'ppa:rakhimov/boost'
      - ubuntu-toolchain-r-test
    packages: [
      # Dev
      cmake, clang-6.0, libunshield-dev, libtinyxml-dev,
      g++-8,
      # Tests
      libgtest-dev, google-mock,
      # Boost
      libboost-filesystem1.61-dev, libboost-program-options1.61-dev, libboost-system1.61-dev,
      # FFmpeg
      libavcodec-dev, libavformat-dev, libavutil-dev, libswscale-dev,
      # Audio & Video
      libsdl2-dev, qtbase5-dev, libopenal-dev,
      # The other ones from OpenMW ppa
      libbullet-dev, libswresample-dev, libopenscenegraph-3.4-dev, libmygui-dev,
      # tes3mp stuff
      libboost1.61-dev, libqt5opengl5-dev, libluajit-5.1-dev
    ]

  coverity_scan:
    project:
      name: "TES3MP/openmw-tes3mp"
      description: "<Your project description here>"
    notification_email: koncord@tes3mp.com
    build_command_prepend: "cmake . -DBUILD_UNITTESTS=FALSE -DBUILD_OPENCS=FALSE -DBUILD_BSATOOL=FALSE -DBUILD_ESMTOOL=FALSE -DBUILD_MWINIIMPORTER=FALSE -DBUILD_LAUNCHER=FALSE"
    build_command:   "make -j3"
    branch_pattern: coverity_scan
matrix:
  include:
    - os: linux
      env:
        - ANALYZE="scan-build-6.0 --use-cc clang-6.0 --use-c++ clang++-6.0 "
        - MATRIX_CC="CC=clang-6.0 && CXX=clang++-6.0"
      compiler: clang
    - os: linux
      env:
        - MATRIX_CC="CC=gcc-8 && CXX=g++-8"
    - os: linux
      env:
        - MATRIX_CC="CC=clang-6.0 && CXX=clang++-6.0"
  allow_failures:
    - env:
        - MATRIX_CC="CC=clang-6.0 && CXX=clang++-6.0"
    - env:
        - ANALYZE="scan-build-6.0 --use-cc clang-6.0 --use-c++ clang++-6.0 "
        - MATRIX_CC="CC=clang-6.0 && CXX=clang++-6.0"

before_install:
      - ./CI/before_install.${TRAVIS_OS_NAME}.sh
before_script: ./CI/before_script.${TRAVIS_OS_NAME}.sh
script:
 - cd ./build
 - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then ${ANALYZE}make -j3; fi
 - if [ "$COVERITY_SCAN_BRANCH" != 1 ] && [ "${TRAVIS_OS_NAME}" = "osx" ]; then make package; fi
 - if [ "$COVERITY_SCAN_BRANCH" != 1 ] && [ "${TRAVIS_OS_NAME}" = "linux" ]; then ./openmw_test_suite; fi
 - if [ "$COVERITY_SCAN_BRANCH" != 1 ] && [ "${TRAVIS_OS_NAME}" = "linux" ]; then cd .. && ./CI/check_tabs.sh; fi
#notifications:
#  email:
#    recipients:
#      - corrmage+travis-ci@gmail.com
#    on_success: change
#    on_failure: always
#  irc:
#    channels:
#      - "chat.freenode.net#openmw"
#    on_success: change
#    on_failure: always
#    use_notice: true
